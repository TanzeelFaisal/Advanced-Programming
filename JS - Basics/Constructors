class character{
    constructor(n,h) {
        this.name = n,
        this.health=h
    }
    describe = () => {
        console.log(`${this.name} has ${this.health} points`)
    }
}

// Arrow functions in JavaScript do not have their own this context.
// Instead, they capture the this value from the surrounding (lexical) scope in which they are defined.
// When you define an arrow function as a method inside an object, it will capture the this value from the outer scope where the object is defined.
// In most cases, this means it captures the this value from the global scope or the parent function if it's defined inside a function.
// Inside classes, arrow functions behave differently because they capture the this value from the lexical scope in which the class method is defined.
// This lexical scope includes the class itself, so this refers to the class instance.

let Alex = new character("Alex", 30)
Alex.describe()

console.log(typeof(Alex))

// No proper concept of Class usage in Js
// Constructor aids in the usage of 'new' keyword
